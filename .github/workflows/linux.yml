#
# SPDX-FileCopyrightText: 2021 EasyCoding Team and contributors
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

name: Linux CI

on:
  push:
    branches:
    - 'master'
  pull_request:
    branches:
    - 'master'

jobs:
  build:
    name: Build and install project
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - compiler: 'clang'
            cc: 'clang'
            cxx: 'clang++'
          - compiler: 'gcc'
            cc: 'gcc'
            cxx: 'g++'
    steps:
    - name: Fetching sources
      uses: actions/checkout@v2
    - name: Updating apt package metadata
      run: |
        sudo apt-get update
    - name: Installing compiler ${{ matrix.compiler }}
      run: |
        sudo apt-get -y install ${{ matrix.compiler }}
    - name: Installing build system
      run: |
        sudo apt-get -y install cmake make
    - name: Installing development packages
      run: |
        sudo apt-get -y install qtbase5-dev qttools5-dev
    - name: Installing helper tools
      run: |
        sudo apt-get -y install appstream-util desktop-file-utils doxygen pandoc qttools5-dev-tools
    - name: Building with CMake
      run: |
        cmake -S . -B build \
            -DCMAKE_C_COMPILER=${{ matrix.cc }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
            -DCMAKE_INSTALL_PREFIX:PATH=/usr \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DBUILD_DOC:BOOL=ON \
            -DBUILD_MANPAGE:BOOL=ON \
            -DBUILD_TESTS:BOOL=ON
        cmake --build build
      env:
        CFLAGS: -O2 -fexceptions -pipe -Wall -Wextra -Werror -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fPIC -fstack-protector-strong -fasynchronous-unwind-tables -fcf-protection
        CXXFLAGS: -O2 -fexceptions -pipe -Wall -Wextra -Werror -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fPIC -fstack-protector-strong -fasynchronous-unwind-tables -fcf-protection
        LDFLAGS: -Wl,-z,relro -Wl,--as-needed -Wl,-z,now
    - name: Running tests
      run: |
        pushd build
        ctest --output-on-failure
        popd
    - name: Installing project with CMake
      run: |
        sudo cmake --install build
